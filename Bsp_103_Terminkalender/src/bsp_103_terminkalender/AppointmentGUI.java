package bsp_103_terminkalender;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Jörg
 */
public class AppointmentGUI extends javax.swing.JFrame {

    private AppointmentModell app = new AppointmentModell();

    public AppointmentGUI() {
        initComponents();
        menuBearbeiten.setText("Bearbeiten");
        menuHinzufuegen.setText("hinzufügen");
        menuentfernen.setText("Entfernen");
        loadData();
        terminListe.setModel(app);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup = new javax.swing.JPopupMenu();
        menuHinzufuegen = new javax.swing.JMenuItem();
        menuentfernen = new javax.swing.JMenuItem();
        menuBearbeiten = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        terminListe = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        menuHinzufuegen.setText("jMenuItem1");
        menuHinzufuegen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHinzufuegenActionPerformed(evt);
            }
        });
        popup.add(menuHinzufuegen);

        menuentfernen.setText("jMenuItem2");
        menuentfernen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuentfernenActionPerformed(evt);
            }
        });
        popup.add(menuentfernen);

        menuBearbeiten.setText("jMenuItem3");
        menuBearbeiten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBearbeitenActionPerformed(evt);
            }
        });
        popup.add(menuBearbeiten);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Termin-Kalender");
        setMinimumSize(new java.awt.Dimension(38, 80));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                saveDatra(evt);
            }
        });

        jLabel1.setText("Termine");
        getContentPane().add(jLabel1, java.awt.BorderLayout.CENTER);

        terminListe.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        terminListe.setComponentPopupMenu(popup);
        terminListe.setMaximumSize(new java.awt.Dimension(10, 20));
        terminListe.setMinimumSize(new java.awt.Dimension(10, 10));
        jScrollPane1.setViewportView(terminListe);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.PAGE_END);

        jButton1.setText("sort");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, java.awt.BorderLayout.LINE_END);

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuHinzufuegenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHinzufuegenActionPerformed
        addAppointment dialog = new addAppointment(this, true);
        dialog.setVisible(true);
        if (dialog.isOk()) {
            Appointment b = dialog.getTermin();
            System.out.println(b);
            app.add(b);
        }
    }//GEN-LAST:event_menuHinzufuegenActionPerformed


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        app.sort(new sortByDate());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void menuentfernenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuentfernenActionPerformed
        app.remove((Appointment) app.getElementAt(terminListe.getSelectedIndex()));
    }//GEN-LAST:event_menuentfernenActionPerformed

    private void menuBearbeitenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBearbeitenActionPerformed
        addAppointment dialog = new addAppointment(this, true);
        Appointment helper = (Appointment) app.getElementAt(terminListe.getSelectedIndex());
        dialog.setTermin((Appointment) app.getElementAt(terminListe.getSelectedIndex()));
        dialog.setVisible(true);

        if (dialog.isOk()) {
            Appointment b = dialog.getTermin();
            app.remove(helper);
            app.change(b, terminListe.getSelectedIndex());
        }
    }//GEN-LAST:event_menuBearbeitenActionPerformed

    private void saveDatra(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_saveDatra
        saveData();
    }//GEN-LAST:event_saveDatra

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppointmentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppointmentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppointmentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppointmentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppointmentGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuBearbeiten;
    private javax.swing.JMenuItem menuHinzufuegen;
    private javax.swing.JMenuItem menuentfernen;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JList<String> terminListe;
    // End of variables declaration//GEN-END:variables

    private void saveData() {
        File f = new File("Text.bin");
        try {
            app.save(f);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
    }

    private void loadData() {
        File f = new File("Text.bin");
        try {
            app.load(f);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
    }
}
